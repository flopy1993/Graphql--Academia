type Query {
	"Lista de los estudiantes de la academia"
	estudiantes: [Estudiante!]!
	"Informacion del estudiante de la academia por id"
	estudiante(id:ID!): Estudiante!
	"Informacion de los cursos de la academia"
	cursos: [Curso!]!
	"Informacion del curso de la academia por id"
	curso(id:ID!): Curso!
}

type Mutation{
	cursoNuevo(curso: CursoInput!): Curso!
	modificarCurso(curso: CursoInput!): Curso!
	eliminarCurso(id: ID!): Curso!
}

input CursoInput{
	id: ID
	title: String!
	description: String!
	clases: Int!
	time: Float!
	logo: String!
	level: Nivel=TODOS
	path: String!
	teacher: String	
}

"Informacion de los estudiantes"
type Estudiante {
	"Identificacion de los estudiantes"
	id: ID!
	name: String!
	email: String!
	website: String!
	courses: [Curso!]!
}

type Curso {
	id: ID!
	title: String!
	description: String!
	clases: Int!
	time: Float!
	logo: String!
	level: Nivel!
	path: String!
	teacher: String	
	students: [Estudiante]
	reviews: [Valoracion!]!
}

enum Nivel {
	TODOS
	NOVATOS
	INTERMEDIO
	EXPERTO
}

type Valoracion{
    id: ID!
    name: String!
    points: Float!
    comments:String
}